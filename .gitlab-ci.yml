workflow:
   rules:
     - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
       when: never
     - when: always

stages:
  - test
  - build
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/microservice
  IMAGE_TAG: "10.0"

test_process:
  stage: test 
  image: node:17-alpine3.14
  tags:
    - docker
  before_script:
    - cd app
    - npm install
  script:
    - npm test

build_image:
  stage: build
  tags:
    - shell
  script:
    - docker build . -t $IMAGE_NAME:$IMAGE_TAG 
  
push_gitlab_registry:
  stage: build 
  tags:
    - shell
  needs:
    - build_image 
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy_process:
  stage: deploy 
  tags:
    - shell
  before_script:
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp -o StrictHostKeyChecking=no ./docker-compose.yml aslan@serverlinux:/home/aslan
  script:
    - ssh -o StrictHostKeyChecking=no aslan@serverlinux "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        export DOCKER_IMAGE_NAME=$IMAGE_NAME &&
        export DOCKER_IMAGE_TAG=$IMAGE_TAG &&
        docker-compose down &&
        docker-compose up -d"
        
  environment:
    name: dev_env
    url: http://192.168.0.105:3000